{"ast":null,"code":"import _slicedToArray from \"/Users/dawid.budaszewski/Desktop/stock-management/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dawid.budaszewski/Desktop/stock-management/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  useEffect(() => {\n    callBackendAPI().then(res => setData(res));\n  });\n\n  const callBackendAPI = async () => {\n    const response = await fetch('/dolls');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n\n    return body;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"lala\");\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dawid.budaszewski/Desktop/stock-management/client/src/App.js"],"names":["React","useState","useEffect","App","data","setData","callBackendAPI","then","res","response","fetch","body","json","status","Error","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACWF,QAAQ,EADnB;AAAA;AAAA,QACNG,IADM;AAAA,QACAC,OADA;;AAGbH,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,cAAc,GACXC,IADH,CACQC,GAAG,IAAIH,OAAO,CAACG,GAAD,CADtB;AAED,GAHQ,CAAT;;AAKA,QAAMF,cAAc,GAAG,YAAY;AACjC,UAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,QAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AACD,WAAOJ,IAAP;AACD,GARD;;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,eAAeR,GAAf","sourcesContent":["import React, {useState, useEffect } from 'react';\n\nfunction App() {\n  const [data, setData] = useState()\n\n  useEffect(() => {\n    callBackendAPI()\n      .then(res => setData(res))\n  })\n  \n  const callBackendAPI = async () => {\n    const response = await fetch('/dolls');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  };\n\n  return (\n    <div>\n      lala\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}